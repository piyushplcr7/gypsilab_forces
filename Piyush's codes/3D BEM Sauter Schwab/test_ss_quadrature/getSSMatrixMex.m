function M = getSSMatrixMex(bndmesh)
    elts = 1:bndmesh.nelt;
    elts = elts';
    elts = repelem(elts,3);
    vtcs = reshape(bndmesh.elt',[bndmesh.nelt*3 1]);
    
    Eltmat = sparse(elts,vtcs,ones(size(vtcs)),bndmesh.nelt,bndmesh.nvtx);
    
    Intmat = Eltmat * Eltmat';
    [I0,J0] = find(Intmat == 0);
    [I1,J1] = find(Intmat == 1);
    [I2,J2] = find(Intmat == 2);
    [I3,J3] = find(Intmat == 3);
    Ivec = [I0;I1;I2;I3]-1;
    Ivec = cast(Ivec,'int32');
    Jvec = [J0;J1;J2;J3]-1;
    Jvec = cast(Jvec,'int32');

    relation = [0*ones(size(I0,1),1);...
            1*ones(size(I1,1),1);...
            2*ones(size(I2,1),1);...
            3*ones(size(I3,1),1)];
    relation = cast(relation,'int32');

    order = 10;
    [X, W] = quad4D(order);

    X0 = X{4}; X0(:,1) = X0(:,1)-X0(:,2); X0(:,3) = X0(:,3)-X0(:,4);
    X0 = X0';
    W0 = W{4};
    
    X1 = X{3}; X1(:,1) = X1(:,1)-X1(:,2); X1(:,3) = X1(:,3)-X1(:,4);
    X1 = X1';
    W1 = W{3};
    
    X2 = X{2}; X2(:,1) = X2(:,1)-X2(:,2); X2(:,3) = X2(:,3)-X2(:,4);
    X2 = X2';
    W2 = W{2};
    
    X3 = X{1}; X3(:,1) = X3(:,1)-X3(:,2); X3(:,3) = X3(:,3)-X3(:,4);
    X3 = X3';
    W3 = W{1};

    Elements = cast(bndmesh.elt'-1,'int32');

    Vertices = bndmesh.vtx';

    Normals = bndmesh.nrm';

    Areas = bndmesh.ndv;

    TrialSpace_gpu = 0;

    TestSpace_gpu = 0;
    
    TrialOperator_gpu = 0;
    
    TestOperator_gpu = 0;

    TrialSpace = fem(bndmesh,'P1');

    TestSpace = fem(bndmesh,'P1');

    [~,Elt2DofTrial] = TrialSpace.dof;
    [~,Elt2DofTest] = TestSpace.dof;

    trialvec = zeros(1,1);
    testvec = zeros(1,1);

    M = SauterSchwabQuadrature_CPU(...
        cast(TrialSpace.ndof,'int32'),...
        cast(TestSpace.ndof,'int32'),...
        cast(bndmesh.nelt,'int32'),...
        cast(bndmesh.nvtx,'int32'),...
        cast(bndmesh.nelt^2,'int32'),...
        Ivec,...
        Jvec,...
        relation,...
        W0,...
        X0,...
        cast(size(X0,2),'int32'),...
        W1,...
        X1,...
        cast(size(X1,2),'int32'),...
        W2,...
        X2,...
        cast(size(X2,2),'int32'),...
        W3,...
        X3,...
        cast(size(X3,2),'int32'),...
        trialvec,...
        testvec,...
        Elements,...
        Vertices,...
        Normals,...
        Areas,...
        cast(Elt2DofTest'-1,'int32'),...
        cast(Elt2DofTrial'-1,'int32'),...
        cast(1,'int32'),... % Trial Space
        cast(1,'int32'),... % Test Space
        cast(0,'int32'),... % Trial Op
        cast(0,'int32'),... % Test Op
        cast(size(TrialSpace.rsf,1),'int32'),...
        cast(size(TestSpace.rsf,1),'int32')...
        );

end